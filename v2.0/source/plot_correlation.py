import numpy as np
import matplotlib.pyplot as plt
import json

pearsonrs_g_g2 = [0.9822342150200971, 0.9701332571277855, 0.8882726521961748, 0.9169493006161776, 0.9165785722292266, 0.6546536707079771, 0.6091095901015048, 1.0, 0.6181339274290045, 0.1647332451644634, 0.8546938320940028, 0.8797861641347268, 0.8427772341319071, 0.4912293197142527, 0.8847219847387993, 0.8154100913168028, 0.33597216268584346, 0.4897277024543451, 0.9405042480923069, 0.9325937597763584]
pearsonrs_g_p = [0.9021937088963171, 0.9209109202723808, 0.9157015435010396, 0.9795347226725087, 0.8524929243380919, 0.6546536707079771, 0.29778515910394115, 1.0, 0.5629784083986618, 0.5309739696759596, 0.9086606278597037, 0.9150772842791178, 0.7164977208318386, 0.4751643808374795, 0.3185591239211394, 0.9120123092652647, 0.32873874773918826, 0.4028788562802578, 0.9834375512288915, 0.793736386974278]
pearsonrs_g_v = [0.6494838734146026, 0.8378212485037868, 0.6433247017349528, 0.5190408097331463, 0.3962029078465307, 0.9958705948858223, 0.28402216842539774, 1.0, -0.3665083330689156, 0.7985288101240618, 0.3776582078184804, 0.5980559246880451, 0.6719447735025835, 0.4584965510822305, 0.9912720720647864, 0.622463019857915, -0.041431188531779684, 0.26471046215834054, 0.31046298104885567, 0.4214353243162639]
pearsonrs_g_s = [0.5214263032495494, 0.42871373503653704, 0.7846086024562416, 0.913230195932833, 0.9437430854797152, 0.8181782346420401, 0.524171259913512, 1.0, 0.6829344150623702, 0.5622426731208227, 0.8508562959454506, 0.9712066390778082, 0.6362106612248755, 0.220817474684456, 0.28339971957425686, 0.9138972137853963, 0.05732144017320891, 0.4731018244184351, 0.5051304583648882, 0.3777142915913273]

plt.figure(figsize=(24, 4))
plt.rcParams.update({'font.size': 18})
width = 0.2
plt.bar(np.arange(len(pearsonrs_g_g2)), pearsonrs_g_g2, width=width, label='Human (A1)')
plt.bar(np.arange(len(pearsonrs_g_v))+ width, pearsonrs_g_v, width=width, label='Votes')
plt.bar(np.arange(len(pearsonrs_g_p))+ 2*width, pearsonrs_g_p, width=width, label='LM')
plt.bar(np.arange(len(pearsonrs_g_s))+ 3*width, pearsonrs_g_s, width=width, label='S-Score')

goals = []
with open("../data/dev-data-reformatted-v4_votes_salience_1-20.json") as f:
    j = json.load(f)
    for i, proc in j.items():
        goals.append(proc["goal"])
        if i == "20":
            break

def cutoff(g, threshold=20):
    if len(g) > threshold:
        g = g[:threshold] + "..."
    return g
goals = [cutoff(g) for g in goals]

# Set x axis to integers from 1 to 20
plt.xticks(np.arange(20), goals, rotation=45)
_, ticks = plt.xticks()
plt.setp(ticks, rotation=-23, ha="left" )
plt.ylim([-0.1, 1.05])

#plt.xlabel('Procedure ID')
plt.ylabel('Pearsonr')
plt.legend()

#plt.ion()
#plt.show()
plt.savefig('../figures/correlations_dev20.png',dpi=300, bbox_inches='tight')